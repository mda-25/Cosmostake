{"version":3,"sources":["components/styled/GlobalStyles.tsx","utils/theme/index.ts","utils/theme/colors.ts","utils/theme/size.ts","utils/theme/gradient.ts","utils/constants.ts","config/config.ts","store/methods/checkWallet.ts","store/index.tsx","components/styled/Container.tsx","components/styled/Box.tsx","components/app/AppChainList.tsx","components/app/AppHeader.tsx","pages/NotFound.tsx","hooks/useLcdSDK.tsx","hooks/useRequest.tsx","utils/helpers.ts","hooks/useShowModal.tsx","components/LayoutModal.tsx","components/styled/Form.tsx","components/styled/Flex.tsx","components/styled/Btn.tsx","components/dashboard/delegations/FormUndelegate.tsx","components/styled/Card.tsx","components/dashboard/delegations/MyDelegatedCard.tsx","hooks/useStargateSDK.tsx","components/dashboard/delegations/Delegations.tsx","components/dashboard/rewards/MyRewardCard.tsx","components/dashboard/rewards/Rewards.tsx","pages/Dashboard.tsx","components/styled/Tbl.tsx","components/table/Row.tsx","components/table/Table.tsx","components/stake/FormDelegate.tsx","components/stake/Delegate.tsx","pages/Stake.tsx","router/routes.ts","router/ScrollToTop.tsx","router/Routers.tsx","components/app/AppFooter.tsx","components/styled/Text.tsx","hooks/useThemeContext.tsx","components/app/AppNav.tsx","layouts/LayoutDefault.tsx","components/app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["createGlobalStyle","vars","black","white","blue","b10","b20","b30","b40","b50","b60","b70","b80","b90","b100","gray","g10","g20","g30","g40","g50","g60","g70","g80","g90","g100","fs14","fs16","fs18","fs20","fs22","fs24","gradientNav","gradientCard","gradientTableHead","CHAIN_LIST_MAINNET","name","chainId","coinMinimalDenom","coinDenom","rest","rpc","CHAIN_LIST_TESTNET","ChainInfos","chainName","bip44","coinType","bech32Config","Bech32Address","defaultBech32Config","currencies","coinDecimals","coinGeckoId","feeCurrencies","stakeCurrency","gasPriceStep","low","average","high","features","checkWallet","currChain","a","window","keplr","getOfflineSigner","console","log","addChain","find","chain","experimentalSuggestChain","error","enable","offlineSigner","signAmino","sign","getAccounts","accounts","initialState","reducer","state","action","type","payload","account","balance","store","createContext","Provider","StoreProvider","children","useReducer","dispatch","setChain","localStoreChain","localStorage","getItem","setItem","JSON","stringify","locChain","parse","setBalance","address","handleBalance","bal","result","setAccount","useEffect","localChain","provider","useMemo","value","CustomContainer","styled","Container","Box","div","theme","color","AppChainList","useContext","Dropdown","Toggle","variant","Menu","map","i","Item","onClick","Divider","TheHeader","AppHeader","to","Image","src","Button","NotFound","useLcdSDK","lcd","LcdClient","API","getValidators","get","getDelegations","getReward","delegator","getBalance","useRequest","useState","isLoading","setIsLoading","resp","setResp","request","func","opt","data","tokenMutez","tokenFormat","capitalizeLetters","text","replace","toLocaleUpperCase","convertIntToMutez","amount","convertMutezToInt","ellipsis","string","start","end","substr","formatToken","symbol","Math","round","numeral","format","formatMinimalDenomToCoinDenom","useShowModal","show","setShow","handleClose","handleShow","Modal","BModal","LayoutModal","title","onHide","Header","closeButton","Title","as","Body","Form","BForm","Flex","FlexJustifyCenter","WrapperBtn","FormUndelegate","delegate","handleUndelegate","setAmount","delegation","onSubmit","event","preventDefault","from","delegator_address","validator_address","denom","Group","Label","Control","disabled","InputGroup","placeholder","onChange","e","Number","target","required","id","Feedback","Card","BCard","MyDelegatedCard","Text","useStargateSDK","setLoading","client","useCallback","SigningStargateClient","connectWithSigner","fee","coin","gas","Delegate","delegateTokens","alert","Undelegate","undelegateTokens","Claim","validator","withdrawRewards","WrapperDashboardInfo","Delegations","myDelegate","Spinner","animation","length","MyRewardCard","handleClaim","reward","WrapperContent","Rewards","rewardsRequest","rewards","Array","isArray","total","elem","Tabs","BTabs","Dashboard","defaultActiveKey","Tab","eventKey","Tbl","BTable","Tr","tr","h","Th","th","THead","thead","TBody","tbody","Row","row","cols","index","col","key","process","Table","rows","label","FormDelegate","handleDelegate","handleSubmit","operator_address","description","moniker","WrapperTable","routes","path","exact","component","validators","style","width","delegator_shares","commission","commission_rates","rate","role","ScrollToTop","pathname","useLocation","scrollTo","Routers","route","render","props","CustomBox","AppFooter","isYear","Date","getFullYear","span","fs","useThemeContext","ThemeContext","WrapperList","WrapperAccount","ChainList","ul","Li","li","activeitem","hr","Link","NavLink","activeClassName","h2","AppNav","location","isActiveItem","includes","blockchain","Wrapper","StakeWrapper","LayoutDefault","App","GlobalStyles","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eace3923.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n    font-size: 14px;\n    color: white;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n  }\n  \n  h1, h2, h3, h4, h5 {\n    margin: 0;\n  }\n`;\n","import colors from './colors';\nimport size from './size';\nimport gradient from './gradient';\n\nconst vars = {\n    ...colors,\n    ...size,\n    ...gradient,\n};\n\nexport default vars;\n","export default {\n    black: '#000',\n    white: '#fff',\n    blue: {\n        b10: '#CCF3FF',\n        b20: '#B7EEFF',\n        b30: '#89E3FF',\n        b40: '#5CCFF4',\n        b50: '#35BFEA',\n        b60: '#24ADD8',\n        b70: '#0F94BD',\n        b80: '#087CA0',\n        b90: '#076785',\n        b100: '#0D4D61',\n    },\n    gray: {\n        g10: '#F5F8FA',\n        g20: '#E8EDF0',\n        g30: '#D5DBE0',\n        g40: '#C2C9CF',\n        g50: '#ADB4BA',\n        g60: '#8D9499',\n        g70: '#656D73',\n        g80: '#424A4F',\n        g90: '#292F33',\n        g100: '#131719',\n    },\n};\n","export default {\n    fs14: '14px',\n    fs16: '16px',\n    fs18: '18px',\n    fs20: '20px',\n    fs22: '22px',\n    fs24: '24px',\n};\n","export default {\n    gradientNav:\n        'linear-gradient(100deg, rgb(66, 74, 79) -3.02%, rgb(19, 23, 25) 93.08%)',\n    gradientCard:\n        'linear-gradient(130.04deg, #424a4f -19.42%, #1d2021 128.18%)',\n    gradientTableHead:\n        'linear-gradient(-45deg, rgba(66,74,79,0.6), rgba(29, 32, 33, 0.85) 0%)',\n};\n","import { IChainList } from '../interface/ChainList';\n\nexport const CHAIN_LIST_MAINNET: IChainList[] = [\n    {\n        name: 'cosmos',\n        chainId: 'cosmoshub',\n        coinMinimalDenom: 'uatom',\n        coinDenom: 'ATOM',\n        rest: 'https://lcd-cosmoshub.keplr.app',\n        rpc: 'https://rpc.cosmos.network',\n    },\n    {\n        name: 'osmosis',\n        chainId: 'osmosis',\n        coinMinimalDenom: 'uosmo',\n        coinDenom: 'OSMO',\n        rest: 'https://lcd-osmosis.keplr.app',\n        rpc: 'https://rpc-osmosis.itastakers.com',\n    },\n    {\n        name: 'kava',\n        chainId: 'kava',\n        coinMinimalDenom: 'ukava',\n        coinDenom: 'KAVA',\n        rest: 'https://lcd-kava.keplr.app',\n        rpc: 'https://rpc.kava.io',\n    },\n];\n\nexport const CHAIN_LIST_TESTNET = [\n    {\n        name: 'vega-testnet',\n        chainId: 'vega-testnet',\n        coinMinimalDenom: 'uatom',\n        coinDenom: 'ATOM',\n        rest: 'http://198.50.215.1:3327',\n        rpc: 'http://198.50.215.1:36657',\n    },\n    {\n        name: 'Photon-testnet',\n        chainId: 'cosmoshub-testnet',\n        coinMinimalDenom: 'uphoton',\n        coinDenom: 'PHOTON',\n        rpc: 'https://rpc.testnet.cosmos.network:443',\n        rest: 'https://api.testnet.cosmos.network:443',\n    },\n];\n","import type { ChainInfo } from '@keplr-wallet/types';\nimport { Bech32Address } from '@keplr-wallet/cosmos';\n\nexport const ChainInfos: ChainInfo[] = [\n    {\n        chainId: 'vega-testnet',\n        chainName: 'vega-testnet',\n        rpc: 'http://198.50.215.1:36657',\n        rest: 'http://198.50.215.1:3327',\n        bip44: {\n            coinType: 118,\n        },\n        bech32Config: Bech32Address.defaultBech32Config('cosmos'),\n        currencies: [\n            {\n                coinDenom: 'ATOM',\n                coinMinimalDenom: 'uatom',\n                coinDecimals: 6,\n                coinGeckoId: 'cosmos',\n            },\n        ],\n        feeCurrencies: [\n            {\n                coinDenom: 'ATOM',\n                coinMinimalDenom: 'uatom',\n                coinDecimals: 6,\n                coinGeckoId: 'cosmos',\n            },\n        ],\n        stakeCurrency: {\n            coinDenom: 'ATOM',\n            coinMinimalDenom: 'uatom',\n            coinDecimals: 6,\n            coinGeckoId: 'cosmos',\n        },\n        coinType: 118,\n        gasPriceStep: {\n            low: 1,\n            average: 1,\n            high: 1,\n        },\n        features: ['stargate', 'no-legacy-stdTx', 'ibc-transfer'],\n    },\n    {\n        chainId: 'cosmoshub-testnet',\n        chainName: 'Photon',\n        rpc: 'https://rpc.testnet.cosmos.network:443',\n        rest: 'https://api.testnet.cosmos.network:443',\n        // Staking coin information\n        stakeCurrency: {\n            // Coin denomination to be displayed to the user.\n            coinDenom: 'PHOTON',\n            // Actual denom (i.e. uatom, uscrt) used by the blockchain.\n            coinMinimalDenom: 'uphoton',\n            // # of decimal points to convert minimal denomination to user-facing denomination.\n            coinDecimals: 6,\n            // (Optional) Keplr can show the fiat value of the coin if a coingecko id is provided.\n            // You can get id from https://api.coingecko.com/api/v3/coins/list if it is listed.\n            // coinGeckoId: \"\"\n        },\n        // (Optional) If you have a wallet webpage used to stake the coin then provide the url to the website in `walletUrlForStaking`.\n        // The 'stake' button in Keplr extension will link to the webpage.\n        // walletUrlForStaking: \"\",\n        // The BIP44 path.\n        bip44: {\n            // You can only set the coin type of BIP44.\n            // 'Purpose' is fixed to 44.\n            coinType: 118,\n        },\n        bech32Config: Bech32Address.defaultBech32Config('cosmos'),\n        // List of all coin/tokens used in this chain.\n        currencies: [\n            {\n                // Coin denomination to be displayed to the user.\n                coinDenom: 'PHOTON',\n                // Actual denom (i.e. uatom, uscrt) used by the blockchain.\n                coinMinimalDenom: 'uphoton',\n                // # of decimal points to convert minimal denomination to user-facing denomination.\n                coinDecimals: 6,\n                // (Optional) Keplr can show the fiat value of the coin if a coingecko id is provided.\n                // You can get id from https://api.coingecko.com/api/v3/coins/list if it is listed.\n                // coinGeckoId: \"\"\n            },\n        ],\n        // List of coin/tokens used as a fee token in this chain.\n        feeCurrencies: [\n            {\n                // Coin denomination to be displayed to the user.\n                coinDenom: 'PHOTON',\n                // Actual denom (i.e. uatom, uscrt) used by the blockchain.\n                coinMinimalDenom: 'uphoton',\n                // # of decimal points to convert minimal denomination to user-facing denomination.\n                coinDecimals: 6,\n                // (Optional) Keplr can show the fiat value of the coin if a coingecko id is provided.\n                // You can get id from https://api.coingecko.com/api/v3/coins/list if it is listed.\n                // coinGeckoId: \"\"\n            },\n        ],\n        // (Optional) The number of the coin type.\n        // This field is only used to fetch the address from ENS.\n        // Ideally, it is recommended to be the same with BIP44 path's coin type.\n        // However, some early chains may choose to use the Cosmos Hub BIP44 path of '118'.\n        // So, this is separated to support such chains.\n        coinType: 118,\n        // (Optional) This is used to set the fee of the transaction.\n        // If this field is not provided, Keplr extension will set the default gas price as (low: 0.01, average: 0.025, high: 0.04).\n        // Currently, Keplr doesn't support dynamic calculation of the gas prices based on on-chain data.\n        // Make sure that the gas prices are higher than the minimum gas prices accepted by chain validators and RPC/REST endpoint.\n        gasPriceStep: {\n            low: 0.01,\n            average: 0.025,\n            high: 0.04,\n        },\n    },\n];\n","import { ChainInfos } from '../../config/config';\nimport type { ChainInfo } from '@keplr-wallet/types';\nimport { IChainList } from '../../interface/ChainList';\n\nexport const checkWallet = async (currChain: IChainList) => {\n    if (!window.keplr || !window.getOfflineSigner) {\n        console.log('Please install keplr extension');\n    } else {\n        const addChain = ChainInfos.find(\n            (chain: ChainInfo) => chain.chainId === currChain.chainId,\n        );\n        if (addChain) {\n            try {\n                await window.keplr.experimentalSuggestChain(addChain);\n            } catch (e) {\n                console.error('Failed to suggest the chain');\n            }\n        }\n    }\n\n    await window.keplr.enable(currChain.chainId);\n\n    const offlineSigner = window.getOfflineSigner(currChain.chainId);\n    offlineSigner.signAmino = offlineSigner.signAmino || offlineSigner.sign;\n    const accounts = await offlineSigner.getAccounts();\n\n    return accounts[0];\n};\n","import React, {\n    createContext,\n    FC,\n    useEffect,\n    useMemo,\n    useReducer,\n} from 'react';\nimport { CHAIN_LIST_MAINNET } from '../utils/constants';\nimport { checkWallet } from './methods/checkWallet';\nimport { IChainList } from '../interface/ChainList';\n\ntype ActionType = {\n    type: string;\n    payload: any;\n};\n\ninterface IInitialState {\n    chain: IChainList;\n    account?: any;\n}\n\nconst initialState: IInitialState = {\n    chain: CHAIN_LIST_MAINNET[0],\n};\n\nconst reducer = (state = initialState, action: ActionType) => {\n    switch (action.type) {\n        case 'SET_CHAIN':\n            return { ...state, chain: action.payload };\n        case 'SET_ACCOUNT':\n            return { ...state, account: action.payload };\n        case 'SET_BALANCE':\n            return { ...state, balance: action.payload };\n        default:\n            return state;\n    }\n};\n\nconst store = createContext<any>({\n    state: initialState,\n});\n\nconst { Provider } = store;\n\nconst StoreProvider: FC = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const setChain = (chain: IChainList) => {\n        const localStoreChain = localStorage.getItem('chain');\n\n        if (chain) {\n            checkWallet(chain);\n\n            localStorage.setItem('chain', JSON.stringify(chain));\n            dispatch({ type: 'SET_CHAIN', payload: chain });\n        } else if (typeof localStoreChain === 'string') {\n            const locChain = JSON.parse(localStoreChain);\n            dispatch({ type: 'SET_CHAIN', payload: locChain });\n        }\n    };\n\n    const setBalance = async (\n        address: string,\n        handleBalance: (address: string) => Promise<any>,\n    ) => {\n        const bal = await handleBalance(address);\n\n        dispatch({\n            type: 'SET_BALANCE',\n            payload: bal.result[0],\n        });\n    };\n\n    const setAccount = async (chain: IChainList) => {\n        setChain(chain);\n\n        const account = await checkWallet(chain);\n\n        dispatch({ type: 'SET_ACCOUNT', payload: account });\n    };\n\n    useEffect(() => {\n        const localStoreChain = localStorage.getItem('chain');\n\n        if (typeof localStoreChain === 'string') {\n            const localChain = JSON.parse(localStoreChain);\n            setAccount(localChain);\n        } else {\n            localStorage.setItem('chain', JSON.stringify(state.chain));\n            const localStoreChain = localStorage.getItem('chain');\n\n            if (typeof localStoreChain === 'string') {\n                setAccount(JSON.parse(localStoreChain));\n            }\n        }\n    }, []);\n\n    const provider = useMemo(() => {\n        return {\n            ...state,\n            dispatch,\n            setAccount,\n            setBalance,\n        };\n    }, [state]);\n\n    return <Provider value={provider}>{children}</Provider>;\n};\n\nexport { store, StoreProvider };\n","import styled from 'styled-components';\nimport { Container } from 'react-bootstrap';\n\nexport const CustomContainer = styled(Container)`\n    margin: 0 auto;\n    max-width: 1400px;\n\n    @media (max-width: 1400px) {\n        padding: 0 10px;\n    }\n`;\n","import styled from 'styled-components';\n\ntype TBox = {\n    color?: string;\n};\n\nconst Box = styled.div<TBox>`\n    background: ${({ theme, color }) => color || theme.white};\n`;\n\nexport default Box;\n","import React, { useContext } from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { CHAIN_LIST_MAINNET, CHAIN_LIST_TESTNET } from '../../utils/constants';\nimport { store } from '../../store';\n\nconst AppChainList = () => {\n    const { chain, setAccount } = useContext(store);\n\n    return (\n        <Dropdown>\n            <Dropdown.Toggle variant=\"primary\">{chain.name}</Dropdown.Toggle>\n\n            <Dropdown.Menu variant=\"dark\">\n                {CHAIN_LIST_MAINNET.map((chain, i) => (\n                    <Dropdown.Item key={i} onClick={() => setAccount(chain)}>\n                        {chain.name}\n                    </Dropdown.Item>\n                ))}\n\n                <Dropdown.Divider />\n\n                {CHAIN_LIST_TESTNET.map((chain, i) => (\n                    <Dropdown.Item key={i} onClick={() => setAccount(chain)}>\n                        {chain.name}\n                    </Dropdown.Item>\n                ))}\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default AppChainList;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Button, Image } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { CustomContainer } from '../styled/Container';\nimport Box from '../styled/Box';\nimport { store } from '../../store';\nimport AppChainList from './AppChainList';\n\nconst TheHeader = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 70px;\n    padding: 10px 0;\n`;\n\nconst AppHeader = () => {\n    const { account, setAccount, chain } = useContext(store);\n\n    return (\n        <Box color=\"linear-gradient(-10deg, #424a4f -3.02%, #131719 50.08%)\">\n            <CustomContainer>\n                <TheHeader>\n                    <Link to=\"/\">\n                        <Image src=\"https://cosmoscan.net/static/media/logo-blue.de555fac.svg\" />\n                    </Link>\n\n                    {account ? (\n                        <AppChainList />\n                    ) : (\n                        <Button onClick={() => setAccount(chain)}>\n                            Connect\n                        </Button>\n                    )}\n                </TheHeader>\n            </CustomContainer>\n        </Box>\n    );\n};\n\nexport default AppHeader;\n","import React from 'react';\n\nconst NotFound = () => {\n    return <div>Not found</div>;\n};\n\nexport default NotFound;\n","import { useMemo } from 'react';\nimport { LcdClient } from '@cosmjs/launchpad';\nimport { IChainList } from '../interface/ChainList';\n\nconst useLcdSDK = (chain: IChainList) => {\n    const lcd = useMemo(() => {\n        const localStoreChain = localStorage.getItem('chain');\n\n        if (typeof localStoreChain === 'string') {\n            const localChain: IChainList = JSON.parse(localStoreChain);\n            return new LcdClient(localChain.rest);\n        }\n\n        return new LcdClient(chain.rest);\n    }, [chain]);\n\n    const API = {\n        getValidators() {\n            return lcd.get('/staking/validators');\n        },\n        getDelegations(address?: string) {\n            return lcd.get(`/staking/delegators/${address}/delegations`);\n        },\n        getReward(delegator: string) {\n            return lcd.get(`/distribution/delegators/${delegator}/rewards`);\n        },\n        getBalance(address: string) {\n            return lcd.get(`/bank/balances/${address}`);\n        },\n    };\n\n    return {\n        API,\n    };\n};\n\nexport default useLcdSDK;\n","import { useState } from 'react';\n\nexport type TFunc = {\n    (opt?: any): any;\n};\n\nconst useRequest = () => {\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [resp, setResp] = useState<any[]>([]);\n\n    const request = async (func: TFunc, opt?: any) => {\n        try {\n            setIsLoading(true);\n            const data = await func(opt);\n            setResp(data.result);\n        } catch (e: any) {\n            console.error(e);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return {\n        request,\n        isLoading,\n        resp,\n    };\n};\n\nexport default useRequest;\n","import numeral from 'numeral';\n\nconst tokenMutez = 1000000;\nconst tokenFormat = '0,0.[0000]';\n\nexport const formatPercent = (value: string | number | bigint) => {\n    return `${numeral(Number(value) * 100).format('0.0')}%`;\n};\n\nexport const capitalizeLetters = (text: string) => {\n    if (!text) return '';\n    return text.replace(text[0], text[0].toLocaleUpperCase());\n};\n\nexport const convertIntToMutez = (amount: number): number => {\n    return amount * tokenMutez;\n};\n\nexport const convertMutezToInt = (amount: number): number => {\n    return amount / tokenMutez;\n};\n\nexport const ellipsis = (string: string, start = 12, end = -7) => {\n    if (!string) return '';\n    return `${string.substr(0, start)}...${string.substr(end)}`;\n};\n\nexport const formatToken = (value: number, symbol = '') => {\n    if (!value) return '0';\n\n    const amount = Math.round(value);\n    return `${numeral(convertMutezToInt(amount)).format('0,0')} ${symbol}`;\n};\n\nexport const formatMinimalDenomToCoinDenom = (\n    value: number,\n    coinDenom = '',\n) => {\n    if (!value) return `0 ${coinDenom}`;\n    else if (value > 1000 * tokenMutez) {\n        return `${numeral(convertMutezToInt(value)).format(\n            '0,[]',\n        )} ${coinDenom}`;\n    } else if (value > 100 * tokenMutez) {\n        return `${numeral(convertMutezToInt(value)).format(\n            '0,0.[00]',\n        )} ${coinDenom}`;\n    } else if (value < tokenMutez) {\n        return `${numeral(convertMutezToInt(value)).format(\n            '0,0.[000000000]',\n        )} ${coinDenom}`;\n    }\n    return `${numeral(convertMutezToInt(value)).format(\n        tokenFormat,\n    )} ${coinDenom}`;\n};\n","import { useState } from 'react';\n\nconst useShowModal = () => {\n    const [show, setShow] = useState<boolean>(false);\n\n    const handleClose = (): void => setShow(false);\n    const handleShow = (): void => setShow(true);\n\n    return {\n        show,\n        handleClose,\n        handleShow,\n    };\n};\n\nexport default useShowModal;\n","import React, { FC } from 'react';\nimport { Modal as BModal } from 'react-bootstrap';\nimport styled from 'styled-components';\n\ninterface IModalProps {\n    handleClose(): void;\n    show: boolean;\n    title: string;\n}\n\nconst Modal = styled(BModal)`\n    color: black;\n`;\n\nconst LayoutModal: FC<IModalProps> = ({\n    children,\n    handleClose,\n    show,\n    title,\n}) => {\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title as=\"h5\">{title}</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>{children}</Modal.Body>\n        </Modal>\n    );\n};\n\nexport default LayoutModal;\n","import styled from 'styled-components';\nimport { Form as BForm, FormProps } from 'react-bootstrap';\n\nconst Form = styled(BForm)<FormProps>`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n`;\n\nexport { Form };\n","import styled from 'styled-components';\n\nconst Flex = styled.div`\n    display: flex;\n`;\n\nconst FlexAlignCenter = styled(Flex)`\n    align-items: center;\n`;\n\nconst FlexJustifyCenter = styled(Flex)`\n    justify-content: center;\n`;\n\nconst FlexCenter = styled(Flex)`\n    justify-content: center;\n    align-items: center;\n`;\n\nexport { Flex, FlexAlignCenter, FlexCenter, FlexJustifyCenter };\n","import styled from 'styled-components';\nimport { Flex } from './Flex';\n\nconst WrapperBtn = styled(Flex)`\n    gap: 20px;\n`;\n\nexport { WrapperBtn };\n","import React, { useState } from 'react';\nimport { IDelegatedProps } from './MyDelegatedCard';\nimport { Form } from '../../styled/Form';\nimport { Button, InputGroup } from 'react-bootstrap';\nimport { WrapperBtn } from '../../styled/Btn';\nimport { convertMutezToInt } from '../../../utils/helpers';\n\ninterface IUndelegateProps extends IDelegatedProps {\n    handleClose(): void;\n}\n\nconst FormUndelegate = ({\n    delegate,\n    handleClose,\n    handleUndelegate,\n}: IUndelegateProps) => {\n    const [amount, setAmount] = useState<number>(0);\n    const { delegation, balance } = delegate;\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        handleUndelegate({\n            from: delegation.delegator_address,\n            to: delegation.validator_address,\n            amount: amount,\n            denom: balance.denom,\n        });\n\n        handleClose();\n    };\n\n    const handleMaxValue = () => {\n        setAmount(convertMutezToInt(balance.amount));\n    };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Form.Group>\n                <Form.Label>Delegate to</Form.Label>\n                <Form.Control value={delegation.validator_address} disabled />\n            </Form.Group>\n\n            <div>\n                <Form.Label>Amount to Delegate</Form.Label>\n                <InputGroup>\n                    <Form.Control\n                        type=\"number\"\n                        placeholder=\"Enter amount\"\n                        value={amount || ''}\n                        onChange={(e) => {\n                            setAmount(Number(e.target.value));\n                        }}\n                        required\n                    />\n                    <Button\n                        variant=\"outline-primary\"\n                        id=\"button-addon2\"\n                        onClick={handleMaxValue}\n                    >\n                        max\n                    </Button>\n                    <Form.Control.Feedback type=\"invalid\">\n                        not Available\n                    </Form.Control.Feedback>\n                </InputGroup>\n            </div>\n\n            <WrapperBtn>\n                <Button variant=\"secondary\" type=\"button\" onClick={handleClose}>\n                    Close\n                </Button>\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Undelegat\n                </Button>\n            </WrapperBtn>\n        </Form>\n    );\n};\n\nexport default FormUndelegate;\n","import styled from 'styled-components';\nimport { Card as BCard } from 'react-bootstrap';\n\nconst Card = styled(BCard)`\n    min-width: 250px;\n    height: fit-content;\n    background: ${({ theme }) => theme.gradientCard};\n`;\n\nexport { Card };\n","import React, { useContext } from 'react';\nimport { Button } from 'react-bootstrap';\nimport {\n    ellipsis,\n    formatMinimalDenomToCoinDenom,\n} from '../../../utils/helpers';\nimport { store } from '../../../store';\nimport useShowModal from '../../../hooks/useShowModal';\nimport LayoutModal from '../../LayoutModal';\nimport FormUndelegate from './FormUndelegate';\nimport type { IOption } from '../../../hooks/useStargateSDK';\nimport { Card } from '../../styled/Card';\n\nexport interface IDelegatedProps {\n    delegate: {\n        delegation: {\n            delegator_address: string;\n            shares: string;\n            validator_address: string;\n        };\n        balance: any;\n    };\n    handleUndelegate(opt?: IOption): void;\n}\n\nconst MyDelegatedCard = ({ delegate, handleUndelegate }: IDelegatedProps) => {\n    const { chain } = useContext(store);\n    const { show, handleShow, handleClose } = useShowModal();\n    const { balance, delegation } = delegate;\n\n    return (\n        <Card>\n            <Card.Header as=\"h5\">Delegated</Card.Header>\n            <Card.Body>\n                <Card.Title>\n                    Validator: {ellipsis(delegation.validator_address, 15, -5)}\n                </Card.Title>\n\n                <Card.Text>\n                    Balance:{' '}\n                    {formatMinimalDenomToCoinDenom(\n                        balance.amount,\n                        chain.coinDenom,\n                    )}\n                </Card.Text>\n\n                <Button variant=\"primary\" onClick={handleShow}>\n                    Undelegate\n                </Button>\n\n                <LayoutModal\n                    handleClose={handleClose}\n                    show={show}\n                    title=\"Undelegation\"\n                >\n                    <FormUndelegate\n                        delegate={delegate}\n                        handleClose={handleClose}\n                        handleUndelegate={handleUndelegate}\n                    />\n                </LayoutModal>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default MyDelegatedCard;\n","import { coin, SigningStargateClient, StdFee } from '@cosmjs/stargate';\nimport { useCallback, useState } from 'react';\nimport { IChainList } from '../interface/ChainList';\n\nexport interface IOption {\n    from: string;\n    to: string;\n    amount: number;\n    denom: string;\n}\n\ntype TClaimProps = {\n    delegate: string;\n    validator: string;\n};\n\nconst useStargateSDK = (chain: IChainList) => {\n    const [isLoading, setLoading] = useState<boolean>(false);\n\n    const client = useCallback(async (): Promise<SigningStargateClient> => {\n        window.keplr.enable(chain.chainId);\n\n        const offlineSigner = window.getOfflineSigner(chain.chainId);\n        offlineSigner.signAmino = offlineSigner.signAmino || offlineSigner.sign;\n\n        return await SigningStargateClient.connectWithSigner(\n            chain.rpc,\n            offlineSigner,\n        );\n    }, [chain]);\n\n    const gas_limit = '200000';\n    const fee: StdFee = {\n        amount: [coin(1, 'uatom')],\n        gas: gas_limit,\n    };\n\n    const Delegate = async ({ from, to, amount, denom }: IOption) => {\n        const rpc = await client();\n        try {\n            setLoading(true);\n            await rpc.delegateTokens(from, to, coin(amount, denom), fee);\n            alert('Success');\n        } catch (e) {\n            console.error(e);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const Undelegate = async ({ from, to, amount, denom }: IOption) => {\n        const rpc = await client();\n        try {\n            setLoading(true);\n            await rpc.undelegateTokens(from, to, coin(amount, denom), fee);\n            alert('Success');\n        } catch (e) {\n            console.error(e);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const Claim = async ({ delegate, validator }: TClaimProps) => {\n        const rpc = await client();\n\n        try {\n            setLoading(true);\n            await rpc.withdrawRewards(delegate, validator, fee);\n            alert('Success');\n        } catch (e: any) {\n            console.error(e);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return {\n        isLoading,\n        Delegate,\n        Undelegate,\n        Claim,\n    };\n};\n\nexport default useStargateSDK;\n","import React, { useContext, useEffect, useMemo } from 'react';\nimport useLcdSDK from '../../../hooks/useLcdSDK';\nimport useRequest from '../../../hooks/useRequest';\nimport styled from 'styled-components';\nimport MyDelegatedCard from './MyDelegatedCard';\nimport { Spinner } from 'react-bootstrap';\nimport { store } from '../../../store';\nimport { FlexJustifyCenter } from '../../styled/Flex';\nimport useStargateSDK, { IOption } from '../../../hooks/useStargateSDK';\nimport { convertIntToMutez } from '../../../utils/helpers';\n\nconst WrapperDashboardInfo = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 20px;\n`;\n\nconst Delegations = () => {\n    const { account, chain, setBalance } = useContext(store);\n    const { API } = useLcdSDK(chain);\n    const delegate = useRequest();\n    const { Undelegate } = useStargateSDK(chain);\n\n    useEffect(() => {\n        if (account) {\n            delegate.request(API.getDelegations, account.address);\n        }\n    }, [account]);\n\n    const handleUndelegate = async ({ from, to, amount, denom }: IOption) => {\n        try {\n            await Undelegate({\n                from,\n                to,\n                amount: convertIntToMutez(amount),\n                denom,\n            });\n            await setBalance(account.address, API.getBalance);\n            await delegate.request(API.getDelegations, account.address);\n        } catch (e: any) {\n            console.error(e);\n        }\n    };\n\n    const myDelegate = useMemo(() => {\n        if (!delegate.resp) return [];\n\n        return delegate.resp;\n    }, [delegate.resp]);\n\n    return (\n        <div>\n            {delegate.isLoading ? (\n                <FlexJustifyCenter>\n                    <Spinner animation=\"border\" variant=\"primary\" />\n                </FlexJustifyCenter>\n            ) : myDelegate.length ? (\n                <WrapperDashboardInfo>\n                    {myDelegate.map((delegate, i) => (\n                        <MyDelegatedCard\n                            key={i}\n                            delegate={delegate}\n                            handleUndelegate={handleUndelegate}\n                        />\n                    ))}\n                </WrapperDashboardInfo>\n            ) : (\n                <FlexJustifyCenter>Not delegations</FlexJustifyCenter>\n            )}\n        </div>\n    );\n};\n\nexport default Delegations;\n","import React, { useContext } from 'react';\nimport { Card } from '../../styled/Card';\nimport {\n    ellipsis,\n    formatMinimalDenomToCoinDenom,\n} from '../../../utils/helpers';\nimport { Button } from 'react-bootstrap';\nimport { store } from '../../../store';\n\ninterface IRewardsProps {\n    data: any;\n    handleClaim(validator: string): void;\n}\n\nconst MyRewardCard = ({ data, handleClaim }: IRewardsProps) => {\n    const { chain } = useContext(store);\n\n    const claim = () => {\n        handleClaim(data.validator_address);\n    };\n    return (\n        <Card>\n            <Card.Header as=\"h5\">Reward</Card.Header>\n            <Card.Body>\n                <Card.Title>\n                    Validator: {ellipsis(data.validator_address, 15, -5)}\n                </Card.Title>\n\n                <Card.Text>\n                    Rewards:{' '}\n                    {data.reward\n                        ? formatMinimalDenomToCoinDenom(\n                              data.reward[0].amount,\n                              chain.coinDenom,\n                          )\n                        : '0'}\n                </Card.Text>\n\n                <Button variant=\"primary\" onClick={claim}>\n                    Claim\n                </Button>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default MyRewardCard;\n","import React, { useContext, useEffect, useMemo } from 'react';\nimport { store } from '../../../store';\nimport useLcdSDK from '../../../hooks/useLcdSDK';\nimport useRequest from '../../../hooks/useRequest';\nimport useStargateSDK from '../../../hooks/useStargateSDK';\nimport MyRewardCard from './MyRewardCard';\nimport { Spinner } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { Flex, FlexJustifyCenter } from '../../styled/Flex';\nimport { formatMinimalDenomToCoinDenom } from '../../../utils/helpers';\n\nconst WrapperDashboardInfo = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 10px;\n`;\n\nconst WrapperContent = styled(Flex)`\n    flex-direction: column;\n    gap: 20px;\n`;\n\nconst Rewards = () => {\n    const { account, chain, setBalance } = useContext(store);\n    const { API } = useLcdSDK(chain);\n    const { Claim } = useStargateSDK(chain);\n    const rewardsRequest: any = useRequest();\n\n    useEffect(() => {\n        if (account) {\n            rewardsRequest.request(API.getReward, account.address);\n        }\n    }, [account]);\n\n    const handleClaim = async (validator: string) => {\n        try {\n            await Claim({ delegate: account.address, validator });\n            await rewardsRequest.request(API.getReward, account.address);\n            await setBalance(account.address, API.getBalance);\n        } catch (e: any) {\n            console.error(e);\n        }\n    };\n\n    const rewards = useMemo(() => {\n        if (Array.isArray(rewardsRequest.resp)) return {};\n\n        return rewardsRequest.resp;\n    }, [rewardsRequest.resp]);\n\n    return (\n        <>\n            {rewardsRequest.isLoading ? (\n                <FlexJustifyCenter>\n                    <Spinner animation=\"border\" />\n                </FlexJustifyCenter>\n            ) : rewards.rewards && rewards.total ? (\n                <WrapperContent>\n                    <h5>\n                        Total rewards:\n                        {formatMinimalDenomToCoinDenom(\n                            rewards.total[0].amount,\n                            chain.coinDenom,\n                        )}\n                    </h5>\n\n                    <WrapperDashboardInfo>\n                        {rewards.rewards.map((elem: any, i: number) => (\n                            <MyRewardCard\n                                key={i}\n                                data={elem}\n                                handleClaim={handleClaim}\n                            />\n                        ))}\n                    </WrapperDashboardInfo>\n                </WrapperContent>\n            ) : (\n                <FlexJustifyCenter>Not rewards</FlexJustifyCenter>\n            )}\n        </>\n    );\n};\n\nexport default Rewards;\n","import React from 'react';\nimport Delegations from '../components/dashboard/delegations/Delegations';\nimport { Tab, Tabs as BTabs } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport Rewards from '../components/dashboard/rewards/Rewards';\n\nconst Tabs = styled(BTabs)`\n    margin-bottom: 20px;\n    .nav-link {\n        color: ${({ theme }) => theme.white};\n        font-weight: 500;\n        font-size: ${({ theme }) => theme.fs18};\n\n        &.active {\n            background-color: ${({ theme }) => theme.blue.b30};\n        }\n\n        &:hover {\n            background-color: ${({ theme }) => theme.blue.b20};\n            color: ${({ theme }) => theme.blue.b70};\n        }\n    }\n`;\n\nconst Dashboard = () => {\n    return (\n        <div>\n            <Tabs defaultActiveKey=\"delegation\" id=\"uncontrolled-tab-example\">\n                <Tab eventKey=\"delegation\" title=\"My delegation\">\n                    <Delegations />\n                </Tab>\n                <Tab eventKey=\"rewards\" title=\"My rewards\">\n                    <Rewards />\n                </Tab>\n            </Tabs>\n        </div>\n    );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\nimport { Table as BTable } from 'react-bootstrap';\n\nconst Tbl: any = styled(BTable)`\n    margin-bottom: 0;\n    text-align: center;\n    color: ${({ theme }) => theme.black};\n    background-color: white;\n`;\n\nTbl.Tr = styled.tr`\n    height: ${({ h }: any) => h || '40px'};\n    vertical-align: middle;\n`;\n\nTbl.Th = styled.th`\n    font-size: ${({ theme }) => theme.fs14};\n    color: ${({ theme }) => theme.gray.g20};\n    text-transform: uppercase;\n`;\n\nTbl.THead = styled.thead`\n    width: 100%;\n    position: sticky;\n    top: 0;\n    backdrop-filter: blur(5px);\n    background: ${({ theme }) => theme.gradientTableHead};\n`;\n\nTbl.TBody = styled.tbody`\n    border-color: rgba(128, 128, 128, 0.2);\n`;\n\nexport default Tbl;\n","import React from 'react';\nimport Tbl from '../styled/Tbl';\n\ntype TRow = {\n    row: any;\n    cols: any;\n    index: number;\n};\n\nconst Row = ({ row, cols, index }: TRow) => {\n    return (\n        <Tbl.Tr>\n            {cols.map((col: any) =>\n                col.key === 'rank' ? (\n                    <td key={col.key}>{index}</td>\n                ) : (\n                    <td key={col.key}>{col.process ? col.process(row) : ''}</td>\n                ),\n            )}\n        </Tbl.Tr>\n    );\n};\n\nexport default Row;\n","import React from 'react';\nimport { Table as BTable } from 'react-bootstrap';\nimport Tbl from '../styled/Tbl';\nimport Row from './Row';\n\ntype TTable = {\n    cols: any[];\n    rows: any[];\n};\n\nconst Table = ({ cols, rows }: TTable) => {\n    return (\n        <>\n            {!rows.length && !rows ? (\n                <div>Not data</div>\n            ) : (\n                <BTable>\n                    <Tbl.THead>\n                        <Tbl.Tr h=\"60px\">\n                            {cols.map((elem) => (\n                                <Tbl.Th key={elem.key}>{elem.label}</Tbl.Th>\n                            ))}\n                        </Tbl.Tr>\n                    </Tbl.THead>\n                    <Tbl.TBody>\n                        {rows.map((row, i) => (\n                            <Row key={i} index={i + 1} row={row} cols={cols} />\n                        ))}\n                    </Tbl.TBody>\n                </BTable>\n            )}\n        </>\n    );\n};\n\nexport default Table;\n","import React, { useContext, useState } from 'react';\nimport { Button, InputGroup } from 'react-bootstrap';\nimport { store } from '../../store';\nimport {\n    convertMutezToInt,\n    formatMinimalDenomToCoinDenom,\n} from '../../utils/helpers';\nimport { WrapperBtn } from '../styled/Btn';\nimport { Form } from '../styled/Form';\n\ninterface IFormProps {\n    handleClose(): void;\n    handleDelegate({ to, amount }: any): void;\n    validator: string;\n}\n\nconst FormDelegate = ({\n    handleClose,\n    validator,\n    handleDelegate,\n}: IFormProps) => {\n    const { chain, balance } = useContext(store);\n    const [amount, setAmount] = useState<number>(0);\n\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        handleDelegate({\n            to: validator,\n            amount,\n        });\n\n        handleClose();\n    };\n\n    const handleMaxAmount = () => {\n        setAmount(convertMutezToInt(balance.amount));\n    };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Form.Group>\n                <Form.Label>Delegate to</Form.Label>\n                <Form.Control value={validator} disabled />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>\n                    Available balance:{' '}\n                    {formatMinimalDenomToCoinDenom(\n                        balance.amount,\n                        chain.coinDenom,\n                    )}\n                </Form.Label>\n            </Form.Group>\n\n            <div>\n                <Form.Label>Amount to Delegate</Form.Label>\n                <InputGroup>\n                    <Form.Control\n                        type=\"number\"\n                        placeholder=\"Enter amount\"\n                        value={amount || ''}\n                        onChange={(e) => {\n                            setAmount(Number(e.target.value));\n                        }}\n                        required\n                    />\n                    <Button\n                        variant=\"outline-primary\"\n                        id=\"button-addon2\"\n                        onClick={handleMaxAmount}\n                    >\n                        max\n                    </Button>\n                    <Form.Control.Feedback type=\"invalid\">\n                        not Available\n                    </Form.Control.Feedback>\n                </InputGroup>\n            </div>\n\n            <WrapperBtn>\n                <Button variant=\"secondary\" type=\"button\" onClick={handleClose}>\n                    Close\n                </Button>\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Delegate\n                </Button>\n            </WrapperBtn>\n        </Form>\n    );\n};\n\nexport default FormDelegate;\n","import React, { useContext } from 'react';\nimport { Button } from 'react-bootstrap';\nimport LayoutModal from '../LayoutModal';\nimport FormDelegate from './FormDelegate';\nimport useShowModal from '../../hooks/useShowModal';\nimport { capitalizeLetters, convertIntToMutez } from '../../utils/helpers';\nimport useStargateSDK from '../../hooks/useStargateSDK';\nimport useLcdSDK from '../../hooks/useLcdSDK';\nimport { store } from '../../store';\n\ntype TDelegationProps = {\n    data: any;\n};\n\ntype THandleDelegateProps = {\n    to: string;\n    amount: number;\n};\n\nconst Delegate = ({ data }: TDelegationProps) => {\n    const { account, chain, setBalance } = useContext(store);\n\n    const { show, handleShow, handleClose } = useShowModal();\n    const { operator_address: validator, description } = data;\n    const { Delegate } = useStargateSDK(chain);\n    const { API } = useLcdSDK(chain);\n\n    const handleDelegate = async ({ to, amount }: THandleDelegateProps) => {\n        try {\n            await Delegate({\n                from: account.address,\n                to,\n                amount: convertIntToMutez(amount),\n                denom: chain.coinMinimalDenom,\n            });\n\n            await setBalance(account.address, API.getBalance);\n        } catch (e: any) {\n            console.error(e);\n        }\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                Delegation\n            </Button>\n\n            <LayoutModal\n                handleClose={handleClose}\n                show={show}\n                title={capitalizeLetters(description.moniker)}\n            >\n                <FormDelegate\n                    validator={validator}\n                    handleClose={handleClose}\n                    handleDelegate={handleDelegate}\n                />\n            </LayoutModal>\n        </>\n    );\n};\n\nexport default Delegate;\n","import React, { useContext, useEffect, useMemo } from 'react';\nimport styled from 'styled-components';\nimport Table from '../components/table/Table';\nimport useRequest from '../hooks/useRequest';\nimport { formatToken, formatPercent } from '../utils/helpers';\nimport Delegate from '../components/stake/Delegate';\nimport useLcdSDK from '../hooks/useLcdSDK';\nimport { store } from '../store';\nimport { Spinner } from 'react-bootstrap';\nimport { FlexJustifyCenter } from '../components/styled/Flex';\n\nconst WrapperTable = styled.div`\n    background: white;\n    height: 100vh;\n    overflow: scroll;\n`;\n\nconst Stake = () => {\n    const { chain, account } = useContext(store);\n    const { API } = useLcdSDK(chain);\n    const { resp, isLoading, request } = useRequest();\n\n    useEffect(() => {\n        if (account) {\n            request(API.getValidators);\n        }\n    }, [account]);\n\n    const validators = useMemo(() => {\n        if (!resp || !resp.length) return [];\n\n        return resp;\n    }, [resp]);\n\n    const cols = [\n        {\n            key: 'rank',\n            label: 'Rank',\n        },\n        {\n            key: 'name',\n            label: 'Name',\n            process(data: any): JSX.Element {\n                return (\n                    <div style={{ width: '250px' }}>\n                        {data.description.moniker}\n                    </div>\n                );\n            },\n        },\n        {\n            key: 'tokens',\n            label: 'Voting power',\n            process(data: any): JSX.Element {\n                return (\n                    <div style={{ width: '150px' }}>\n                        {formatToken(data.delegator_shares, chain.coinDenom)}\n                    </div>\n                );\n            },\n        },\n        {\n            key: 'commission',\n            label: 'Commission',\n            process(data: any): JSX.Element {\n                return (\n                    <div>\n                        {formatPercent(data.commission.commission_rates.rate)}\n                    </div>\n                );\n            },\n        },\n        {\n            key: 'button',\n            label: '',\n            process(data: any): JSX.Element {\n                return <Delegate data={data} />;\n            },\n        },\n    ];\n    return (\n        <>\n            {isLoading ? (\n                <FlexJustifyCenter>\n                    <Spinner\n                        animation=\"border\"\n                        role=\"status\"\n                        variant=\"primary\"\n                    />\n                </FlexJustifyCenter>\n            ) : (\n                <WrapperTable>\n                    <Table cols={cols} rows={validators} />\n                </WrapperTable>\n            )}\n        </>\n    );\n};\n\nexport default Stake;\n","import NotFound from '../pages/NotFound';\nimport Dashboard from '../pages/Dashboard';\nimport Stake from '../pages/Stake';\n\nexport interface IRoute {\n    path: string;\n    name: string;\n    exact: boolean;\n    component: any;\n    props?: any;\n}\n\nexport const routes: IRoute[] = [\n    {\n        path: '/stake',\n        name: 'Stake',\n        exact: true,\n        component: Stake,\n    },\n    {\n        path: '/dashboard',\n        name: 'Dashboard',\n        exact: true,\n        component: Dashboard,\n    },\n    {\n        path: '*',\n        name: 'Not Found',\n        exact: false,\n        component: NotFound,\n    },\n];\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\n/**\n * @return {null}\n */\nfunction ScrollToTop() {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return null;\n}\n\nexport default ScrollToTop;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { routes } from './routes';\nimport ScrollToTop from './ScrollToTop';\n\nexport const Routers = () => {\n    return (\n        <>\n            <ScrollToTop />\n            <Switch>\n                <Redirect exact from=\"/\" to=\"/stake\" />\n\n                {routes.map((route, index) => (\n                    <Route\n                        key={index}\n                        path={route.path}\n                        exact={route.exact}\n                        render={(props) => (\n                            <route.component\n                                name={route.name}\n                                {...props}\n                                {...route.props}\n                            />\n                        )}\n                    />\n                ))}\n            </Switch>\n        </>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport Box from '../styled/Box';\nimport { CustomContainer } from '../styled/Container';\n\nconst CustomBox = styled(Box)`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 50px;\n    color: white;\n`;\n\nconst AppFooter = () => {\n    const isYear = new Date().getFullYear();\n\n    return (\n        <CustomBox color=\"linear-gradient(0deg, #424a4f -3.02%, #131719 150.08%)\">\n            <CustomContainer>\n                <span>© Everstake {isYear}. All rights reserved.</span>\n            </CustomContainer>\n        </CustomBox>\n    );\n};\n\nexport default AppFooter;\n","import styled from 'styled-components';\n\ninterface ITextProps {\n    fs?: string;\n}\n\nconst Text = styled.span<ITextProps>`\n    font-weight: 400;\n    font-size: ${(props) => props.fs || props.theme.fs16};\n`;\n\nexport { Text };\n","import { useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\n\nconst useThemeContext = () => {\n    return useContext(ThemeContext);\n};\n\nexport default useThemeContext;\n","import React, { useContext, useEffect, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { store } from '../../store';\nimport { CHAIN_LIST_MAINNET, CHAIN_LIST_TESTNET } from '../../utils/constants';\nimport {\n    capitalizeLetters,\n    ellipsis,\n    formatMinimalDenomToCoinDenom,\n} from '../../utils/helpers';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { Text } from '../styled/Text';\nimport { Flex } from '../styled/Flex';\nimport useLcdSDK from '../../hooks/useLcdSDK';\nimport useThemeContext from '../../hooks/useThemeContext';\n\nconst WrapperList = styled.div`\n    padding: 10px 20px;\n    overflow: scroll;\n    border-radius: 5px;\n    background: ${({ theme }) => theme.gradientNav};\n    box-shadow: rgb(2 3 3 / 50%) 20px 20px 50px;\n`;\n\nconst WrapperAccount = styled(Flex)`\n    flex-direction: column;\n    gap: 20px;\n    min-height: 75px;\n`;\n\nconst ChainList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 2px;\n    margin: 10px 0 0;\n    padding: 0;\n    list-style: none;\n`;\n\nconst Li = styled.li<any>`\n    cursor: pointer;\n    padding: 5px 10px;\n    font-size: ${({ theme }) => theme.fs18};\n    color: ${({ theme, activeitem }) => activeitem || theme.white};\n    text-decoration: none;\n\n    &:hover {\n        color: ${({ theme }) => theme.white};\n        background: rgba(128, 128, 128, 0.2);\n    }\n`;\n\nconst Divider = styled.hr`\n    color: ${({ theme }) => theme.white};\n`;\n\nconst Link = styled(NavLink)`\n    cursor: pointer;\n    font-size: ${({ theme }) => theme.fs18};\n    color: ${({ theme }) => theme.gray.g20};\n    text-decoration: none;\n    font-weight: 400;\n    text-transform: uppercase;\n\n    &:hover {\n        color: ${({ theme }) => theme.blue.b40};\n    }\n    &.${(props) => props.activeClassName} {\n        color: ${({ theme }) => theme.blue.b60};\n    }\n`;\n\nconst Title = styled.h2`\n    font-size: ${({ theme }) => theme.fs18};\n    color: ${({ theme }) => theme.gray.g40};\n    font-weight: 400;\n    text-transform: uppercase;\n`;\n\nconst AppNav = () => {\n    const theme = useThemeContext();\n    const { setAccount, chain, account, setBalance, balance } =\n        useContext(store);\n    const { API } = useLcdSDK(chain);\n    const location = useLocation();\n\n    useEffect(() => {\n        if (account) {\n            setBalance(account.address, API.getBalance);\n        }\n    }, [account]);\n\n    const isActiveItem = useMemo(() => {\n        return location.pathname.includes('stake');\n    }, [location]);\n\n    return (\n        <WrapperList>\n            {account && (\n                <WrapperAccount>\n                    <Text fs=\"18px\">{ellipsis(account.address)}</Text>\n\n                    <div>\n                        <h5>Balance</h5>\n                        <h5>\n                            {formatMinimalDenomToCoinDenom(\n                                balance ? balance.amount : 0,\n                                chain.coinDenom,\n                            )}\n                        </h5>\n                    </div>\n                </WrapperAccount>\n            )}\n\n            <Divider />\n\n            <Link to=\"/dashboard\" activeClassName=\"selected\">\n                Dashboard\n            </Link>\n\n            <Divider />\n\n            <Title>Blockchain</Title>\n\n            <ChainList>\n                {CHAIN_LIST_MAINNET.map((blockchain, i) => (\n                    <Li\n                        key={i}\n                        as={NavLink}\n                        to=\"/stake\"\n                        onClick={() => setAccount(blockchain)}\n                        activeitem={\n                            chain.name === blockchain.name && isActiveItem\n                                ? theme.blue.b60\n                                : ''\n                        }\n                    >\n                        {capitalizeLetters(blockchain.name)}\n                    </Li>\n                ))}\n            </ChainList>\n\n            <Divider />\n\n            <ChainList>\n                {CHAIN_LIST_TESTNET.map((blockchain, i) => (\n                    <Li\n                        key={i}\n                        as={NavLink}\n                        to=\"/stake\"\n                        onClick={() => setAccount(blockchain)}\n                        activeitem={\n                            chain.name === blockchain.name && isActiveItem\n                                ? theme.blue.b60\n                                : ''\n                        }\n                    >\n                        {capitalizeLetters(blockchain.name)}\n                    </Li>\n                ))}\n            </ChainList>\n        </WrapperList>\n    );\n};\n\nexport default AppNav;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport AppHeader from '../components/app/AppHeader';\nimport { Routers } from '../router/Routers';\nimport AppFooter from '../components/app/AppFooter';\nimport AppNav from '../components/app/AppNav';\nimport { CustomContainer } from '../components/styled/Container';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nconst WrapperContent = styled.div`\n    background: linear-gradient(0deg, #424a4f -10%, #8d9499);\n`;\n\nconst StakeWrapper = styled.div`\n    display: grid;\n    justify-content: center;\n    grid-template-columns: 25% 1fr;\n    column-gap: 20px;\n    margin: 20px 0;\n    min-height: 100vh;\n`;\n\nconst LayoutDefault: FC = () => {\n    return (\n        <Wrapper>\n            <AppHeader />\n\n            <WrapperContent>\n                <CustomContainer>\n                    <StakeWrapper>\n                        <AppNav />\n\n                        <Routers />\n                    </StakeWrapper>\n                </CustomContainer>\n            </WrapperContent>\n\n            <AppFooter />\n        </Wrapper>\n    );\n};\n\nexport default LayoutDefault;\n","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyles from '../styled/GlobalStyles';\nimport { Normalize } from 'styled-normalize';\nimport theme from '../../utils/theme';\nimport { StoreProvider } from '../../store';\nimport LayoutDefault from '../../layouts/LayoutDefault';\n\nfunction App() {\n    return (\n        <Router>\n            <StoreProvider>\n                <Normalize />\n                <ThemeProvider theme={theme}>\n                    <GlobalStyles />\n                    <LayoutDefault />\n                </ThemeProvider>\n            </StoreProvider>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            },\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/index.scss';\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Window as KeplrWindow } from '@keplr-wallet/types';\n\ndeclare global {\n    interface Window extends KeplrWindow {\n        keplr: any;\n        getOfflineSigner: any;\n    }\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}